# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up MySQL
      uses: samin/mysql-action@v1.3
      with:
        host port: 3306
        container port: 3306
        mysql host: ${{secrets.DB_URL}}
        mysql database: test
        mysql user: ${{secrets.DB_USERNAME}}
        mysql root password: ${{secrets.DB_PASSWORD}}
        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25
      with:
        arguments: clean bootJar

    - name: Make Directory for Deploy
      run: mkdir deploy

    - name: Copy Jar File
      run: cp ./build/libs/*.jar ./deploy/

    - name: Copy .sh File
      run: cp -r scripts deploy

    - name: Copy AppSpec.yml File
      run: cp ./appspec.yml ./deploy/

    - name: Move Directory
      run: cd ./deploy/
      
    - name: Make zip file
      run: zip -r -qq -j ./CI-CD.zip ./deploy

    - name: Deliver to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_KEY}}
      run: aws s3 cp --region ap-northeast-2 --acl private ./CI-CD.zip s3://${{secrets.BUCKET_NAME}}/

    - name: Implement CodeDeploy
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_KEY}}
        AWS_DEFAULT_REGION: ${{secrets.AWS_REGION}}
run: aws deploy create-deployment --application-name ${{secrets.AWS_CODE_DEPLOY_NAME}} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{secrets.AWS_CODE_DEPLOY_GROUP_NAME}} --s3-location bucket=${{secrets.BUCKET_NAME}},key=CI-CD.zip,bundleType=zip        
